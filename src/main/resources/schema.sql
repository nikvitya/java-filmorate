DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS ratings CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;


CREATE TABLE IF NOT EXISTS genres (
  id INTEGER PRIMARY KEY,
  name varchar(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS ratings (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  id INTEGER  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(200) NOT NULL,
  release_date DATE NOT NULL,
  duration INTEGER  NOT NULL,
  rating_id INTEGER
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id INTEGER NOT NULL,
  genre_id INTEGER NOT NULL,
  UNIQUE(film_id, genre_id)
);



CREATE TABLE IF NOT EXISTS film_likes (
  film_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name varchar(60),
  email varchar(60) NOT NULL,
  login varchar(60) NOT NULL,
  birthday DATE
);

CREATE TABLE IF NOT EXISTS friends (
  user_id INTEGER NOT NULL,
  friend_id INTEGER NOT NULL
);

ALTER TABLE FILMS ADD CONSTRAINT FILMS_FK FOREIGN KEY (RATING_ID) REFERENCES RATINGS(ID);

ALTER TABLE FILM_GENRE ADD CONSTRAINT FILM_GENRE_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID);
ALTER TABLE FILM_GENRE ADD CONSTRAINT FILM_GENRE_FK2 FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID);

ALTER TABLE FRIENDS ADD CONSTRAINT FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID);
ALTER TABLE FRIENDS ADD CONSTRAINT FRIENDS_FK2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS(ID);

ALTER TABLE FILM_LIKES ADD CONSTRAINT FILM_LIKES_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID);
ALTER TABLE FILM_LIKES ADD CONSTRAINT FILM_LIKES_FK2 FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID);



